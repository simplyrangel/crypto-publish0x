"""Templates for LaTeX tables."""
from datetime import datetime 

def _autogen_message():
    return """% This table was autogenerated by 'write-tables.py' on 
% {date} UTC.
% 
""".format(date=datetime.today().strftime("%Y-%m-%d"))

def coin_performance_lite(
    metrics_df,
    caption,
    texfile,
    ):
    row_template = "{c0} & {c1} & {c2} \\\\ \n"
    with open(texfile,"w") as of:
        of.write(_autogen_message())
        of.write("""\\begin{longtable}[c]{ l c c } \n""")
        of.write("""\caption{%s} \\\\ 
\hline 
\\textbf{coin} & \\textbf{performance ratio} & \\textbf{portfolio share} \\\\
\hline
"""%caption)
        for coin in metrics_df.index:
            row = row_template.format(
                c0=coin.upper(),
                c1=metrics_df.loc[coin,"performance"],
                c2=metrics_df.loc[coin,"portfolio_value_ratio"],
                )
            of.write(row)
        of.write("\hline \n")
        of.write("\end{longtable} \n")

def performance_summary(
    ncoins,
    current_value,
    current_deposit_sum,
    current_performance,
    caption,
    texfile,
    ):
    header_str = """
\\begin{longtable}[c]{ l c } 
\caption{%s} \\\\
\hline
\\textbf{parameter} & \\textbf{value} \\\\
\hline"""%caption
    data_str = """
number of coins & {ncoins} \\\\
portfolio value & \${portfolio_value} \\\\
total deposits & \${deposits} \\\\
performance ratio & {performance} \\\\
\hline 
""".format(
    ncoins=ncoins,
    portfolio_value=round(current_value,2),
    deposits=round(current_deposit_sum,2),
    performance=round(current_performance,2),
    )
    with open(texfile,"w") as of:
        of.write(_autogen_message())
        of.write(header_str)
        of.write(data_str)
        of.write("\end{longtable} \n")
    
    
    
